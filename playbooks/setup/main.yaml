---
- name: Setup global configuration rocket chat
  hosts: all
  become: true
  gather_facts: true

  tasks:
  - name: Fetch private IP addresses
    block:
    - name: Get private IP of testing server
      set_fact:
        ip_server_testing: "{{ hostvars[groups['tag_testing_server'][0]].ansible_default_ipv4.address | default('') }}"

    - name: Get private IP of frontend server
      set_fact:
        ip_target_testing: "{{ hostvars[groups['tag_nginx_server'][0]].ansible_default_ipv4.address | default('') }}"

    - name: Debug IP addresses
      ansible.builtin.debug:
        msg:
        - "Testing IP: {{ ip_server_testing | default('Not defined') }}"
        - "Nginx IP: {{ ip_target_testing | default('Not defined') }}"

  - name: Ensure Docker is installed
    block:
    - name: Check Docker installation
      ansible.builtin.command:
        cmd: docker --version
      register: docker_check
      changed_when: false
      failed_when: false

    - name: Install Docker if not installed
      ansible.builtin.include_role:
        name: docker
      when: docker_check.rc != 0

    rescue:
    - name: Fail if Docker installation fails
      ansible.builtin.fail:
        msg: "Docker installation failed. Check Docker role or system configuration."

  - name: Apply Monitoring setup
    ansible.builtin.include_role:
      name: "monitoring"
    when: "'tag_nginx_server' in group_names"

  - name: Setup Application Rocket.Chat
    block:
    - name: Synchronize Rocket.Chat containerization files
      ansible.posix.synchronize:
        src: "../../templates/azzuri-dev/"
        dest: "/home/{{ ansible_user }}/rocket-chat/"
        mode: push
        recursive: yes

    - name: Ensure nginx certificates directory exists
      file:
        path: "/home/{{ ansible_user }}/rocket-chat/nginx/certs"
        state: directory
        mode: '0755'

    - name: Generate SSL certificate and key if not exists
      command: >
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /home/{{ ansible_user }}/rocket-chat/nginx/certs/server.key -out /home/{{ ansible_user }}/rocket-chat/nginx/certs/server.crt -subj "/C=US/ST=State/L=City/O=Organization/OU=IT/CN=localhost"
      args:
        creates: "/home/{{ ansible_user }}/rocket-chat/nginx/certs/server.key"

    - name: Verify Docker Compose installation
      command: docker compose version
      register: docker_compose_check
      failed_when: docker_compose_check.rc != 0
      changed_when: false

    - name: Start Rocket.Chat using Docker Compose
      ansible.builtin.shell:
        cmd: >
          docker compose -f /home/{{ ansible_user }}/rocket-chat/docker-compose.yml up -d
      args:
        executable: /bin/bash
      register: docker_compose_up
      changed_when: "'Starting' in docker_compose_up.stdout or 'Creating' in docker_compose_up.stdout"
    when: "'tag_nginx_server' in group_names"
  # - name: Configure Testing Environment
  #   block:
  #   - name: Apply testing role with required variables
  #     ansible.builtin.include_role:
  #       name: "{{ testing_role }}"
  #     vars:
  #       ip_target: "{{ ip_target_frontend }}"
  #       ip_server: "{{ ip_target_testing }}"
  #     when: "'tag_testing_server' in group_names"

  #   rescue:
  #   - name: Handle testing setup failure
  #     ansible.builtin.debug:
  #       msg: "Testing setup failed, but continuing deployment."
