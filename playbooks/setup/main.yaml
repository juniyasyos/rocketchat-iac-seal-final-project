- name: Setup global configuration for Rocket.Chat
  hosts: all
  become: true
  gather_facts: true
  tasks:
  - name: Fetch private IP addresses
    block:
    - name: Get private IPs of servers
      set_fact:
        ip_server_testing: "{{ hostvars[groups['tag_testing_server'][0]].ansible_default_ipv4.address | default('') }}"
        ip_nginx_server: "{{ hostvars[groups['tag_nginx_server'][0]].ansible_default_ipv4.address | default('') }}"
        ip_monitoring_server: "{{ hostvars[groups['tag_monitoring_server'][0]].ansible_default_ipv4.address | default('') }}"
        ip_db_server: "{{ hostvars[groups['tag_db_server'][0]].ansible_default_ipv4.address | default('') }}"
        host_monitoring: "3.233.181.180"

    - name: Display fetched IP addresses
      ansible.builtin.debug:
        msg:
        - "Testing IP: {{ ip_server_testing | default('Not defined') }}"
        - "Frontend (nginx) IP: {{ ip_nginx_server | default('Not defined') }}"
        - "Monitoring IP: {{ ip_monitoring_server | default('Not defined') }}"
        - "Database IP: {{ ip_db_server | default('Not defined') }}"
        - "Host Monitoring: {{ host_monitoring | default('Not defined') }}"

    - name: Ensure the destination directory exists locally
      file:
        path: "../../roles/monitoring/templates/monitoring/prometheus"
        state: directory
        mode: '0755'
      delegate_to: localhost

    - name: Render Prometheus config file from template locally for Prometheus
      template:
        src: "../../roles/monitoring/templates/monitoring/prometheus/prometheus.yml.j2"
        dest: "../../roles/monitoring/templates/monitoring/prometheus/prometheus.yml"
      delegate_to: localhost
      when: "'tag_nginx_server' in group_names"

    - name: Render Prometheus config file from template locally for datafource grafana dashboard
      template:
        src: "../../roles/monitoring/templates/monitoring/grafana/provisioning/datasources/datasource.yml.j2"
        dest: "../../roles/monitoring/templates/monitoring/grafana/provisioning/datasources/datasource.yml"
      delegate_to: localhost
      when: "'tag_nginx_server' in group_names"

  - name: Ensure Docker is installed
    block:
    - name: Check Docker installation
      ansible.builtin.command:
        cmd: docker --version
      register: docker_check
      changed_when: false
      failed_when: false

    - name: Install Docker if not installed
      ansible.builtin.include_role:
        name: docker
      when: docker_check.rc != 0

    rescue:
    - name: Fail if Docker installation fails
      ansible.builtin.fail:
        msg: "Docker installation failed. Check Docker role or system configuration."

  - name: Setup Telnet and server connections in the same network
    ansible.builtin.include_tasks: ../helpers/connections.yaml

  - name: Deploy Rocket.Chat and MongoDB application
    block:
    - name: Setup Rocket.Chat and MongoDB
      ansible.builtin.include_tasks: ../helpers/application.yaml
      when: "'tag_db_server' in group_names or 'tag_nginx_server' in group_names"

    - name: Start MongoDB server with Docker Compose
      ansible.builtin.shell: >
        docker compose -f /home/{{ ansible_user }}/rocket-chat/mongodb.yml up -d
      register: docker_compose_up_mongo
      changed_when: "'Starting' in docker_compose_up_mongo.stdout or 'Creating' in docker_compose_up_mongo.stdout"
      when: "'tag_db_server' in group_names"

    - name: Ensure nginx certificates directory exists
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/rocket-chat/nginx/certs"
        state: directory
        mode: '0755'
      when: "'tag_nginx_server' in group_names"

    - name: Generate SSL certificate and key if not exists
      ansible.builtin.command: >
        openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /home/{{ ansible_user }}/rocket-chat/nginx/certs/server.key -out /home/{{ ansible_user }}/rocket-chat/nginx/certs/server.crt -subj "/C=US/ST=State/L=City/O=Organization/OU=IT/CN=localhost"
      args:
        creates: "/home/{{ ansible_user }}/rocket-chat/nginx/certs/server.key"
      when: "'tag_nginx_server' in group_names"

    - name: Set permissions for certificate files
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/rocket-chat/nginx/certs/server.crt"
        mode: '0644'
      when: "'tag_nginx_server' in group_names"

    - name: Set permissions for key files
      ansible.builtin.file:
        path: "/home/{{ ansible_user }}/rocket-chat/nginx/certs/server.key"
        mode: '0600'
      when: "'tag_nginx_server' in group_names"

    - name: Start Rocket.Chat server with Docker Compose
      ansible.builtin.shell: >
        docker compose -f /home/{{ ansible_user }}/rocket-chat/nginx-rochat.yml up -d
      register: docker_compose_up_chat
      changed_when: "'Starting' in docker_compose_up_chat.stdout or 'Creating' in docker_compose_up_chat.stdout"
      when: "'tag_nginx_server' in group_names"

  - name: Setup monitoring tools
    ansible.builtin.include_tasks: ../helpers/monitoring.yaml
    when: "'tag_nginx_server' in group_names or 'tag_monitoring_server' in group_names or 'tag_db_server' in group_names"

