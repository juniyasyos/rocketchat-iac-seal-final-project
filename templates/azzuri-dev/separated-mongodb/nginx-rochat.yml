networks:
  rocket_chat_network:
    driver: bridge

volumes:
  nginx_certificates: { driver: local }
  nginx_vhost: { driver: local }

services:
  rocketchat:
    image: ${IMAGE:-registry.rocket.chat/rocketchat/rocket.chat}:${RELEASE:-latest}
    restart: always
    environment:
      MONGO_URL: "mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@${MONGODB_ADVERTISED_HOSTNAME}:${MONGODB_PORT_NUMBER}/${MONGODB_DATABASE}?authSource=${MONGO_AUTH_SOURCE}&replicaSet=${MONGODB_REPLICA_SET_NAME}"
      MONGO_OPLOG_URL: "mongodb://${MONGODB_ROOT_USER}:${MONGODB_ROOT_PASSWORD}@${MONGODB_ADVERTISED_HOSTNAME}:${MONGODB_PORT_NUMBER}/local?authSource=${MONGO_AUTH_SOURCE}&replicaSet=${MONGODB_REPLICA_SET_NAME}"
      ROOT_URL: ${ROOT_URL:-https://localhost}
      PORT: ${PORT:-3000}
      DEPLOY_METHOD: docker
      DEPLOY_PLATFORM: ${DEPLOY_PLATFORM:-}
      REG_TOKEN: ${REG_TOKEN:-}
    expose:
    - ${PORT:-3000}
    networks:
    - rocket_chat_network

  nginx:
    image: nginx:latest
    restart: "no"
    volumes:
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    - ./nginx/certs:/etc/nginx/certs:ro
    ports:
    - "80:80"
    - "443:443"
    depends_on:
    - rocketchat
    networks:
    - rocket_chat_network

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    ports:
    - '9100:9100'
    restart: always
    networks:
    - rocket_chat_network
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:9100/metrics || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3

  nginx-prometheus-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: prometheus-nginx-exporter
    restart: always
    command:
    - "--nginx.scrape-uri=http://nginx:80/stub_status"
    ports:
    - '9113:9113'
    networks:
    - rocket_chat_network
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://nginx:80/stub_status || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 3
    environment:
      SCRAPE_URI: "http://nginx:80/stub_status"
